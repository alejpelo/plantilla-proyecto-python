repos:
  - repo: local
    hooks:
      - id: poetry-check
        name: poetry => check poetry configuration does not get committed in a broken state
        stages: [commit]
        language: system
        entry: poetry check
        always_run: true
        pass_filenames: false
      - id: poetry-lock
        name: poetry => make sure the lock file is up-to-date
        stages: [push]
        language: system
        entry: poetry lock
        always_run: true
        pass_filenames: false
      - id: mypy
        name: mypy => type checking
        stages: [commit]
        language: system
        entry: poetry run mypy
        always_run: true
        pass_filenames: false
      - id: black
        name: black => code formatting
        stages: [commit]
        language: system
        entry: poetry run black . --check
        always_run: true
        pass_filenames: false
      - id: ruff
        name: ruff => linting
        stages: [commit]
        language: system
        entry: poetry run ruff check .
        always_run: true
        pass_filenames: false
      - id: pip-audit
        name: pip-audit => vulnerability checking
        stages: [push]
        language: system
        entry: poetry run pip-audit
        always_run: true
        pass_filenames: false
      - id: pytest
        name: pytest => testing
        stages: [push]
        language: system
        entry: poetry run pytest --cov
        always_run: true
        pass_filenames: false
      - id: coverage
        name: coverage => testing coverage
        stages: [push]
        language: system
        entry: poetry run coverage report
        always_run: true
        pass_filenames: false
      - id: create requirements
        name: update requirements' files
        stages: [push]
        language: system
        entry: sh write_requirements.sh
        always_run: true
        pass_filenames: false
